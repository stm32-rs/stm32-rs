_svd: ../svd/stm32l4x3.svd

# SVD incorrectly labels APB1ENR1 bit 26 as USBF instead of USBFSEN.
RCC:
  APB1ENR1:
    _modify:
      SP3EN:
        name: SPI3EN
        description: SPI peripheral 3 clock enable
    _modify:
      USBF:
        name: USBFSEN
        description: USB FS clock enable

        
  # SVD incorrectly shifts CRCEN/CRCRST/CRCSMEN  11 bits instead of 12
  AHB1ENR:
    _modify:
      CRCEN:
        bitOffset: 12
  AHB1RSTR:
    _modify:
      CRCRST:
        bitOffset: 12
  AHB1SMENR:
    _modify:
      CRCSMEN:
        bitOffset: 12

  APB1RSTR1:
    _add:
      USBFSRST:
        description: USB FS reset
        bitOffset: 26
        bitWidth: 1

_modify:
  # The SVD calls ADC1 ADC.
  ADC:
    name: ADC1
  USB:
     baseAddress: "0x40006800"

USB:
  _add:
    _interrupts:
      USB_FS:
        description: USB event interrupt through EXTI
        value: 67

  # todo: Adding BCDR causes interrupt add to fail. Prioritizing the interrupt, since in practice
  # todo the `usbd` crate handles BCDR reads and writes with its own PAC.

  # _add:
  #   BCDR:
  #     description: Battery charging detector
      # addressOffset: 0x58
      # size: 0x10  # todo: 0x20? 16-bit field though.
      # access: read-write
      # resetValue: 0x0000
  #     fields:
  #       BCDEN:
  #         description: Battery charging detector (BCD) enable
  #         bitOffset: 0
  #         bitWidth: 1
  #       DCDEN:
  #         description: Data contact detection (DCD) mode enable
  #         bitOffset: 1
  #         bitWidth: 1
  #       PDEN:
  #         description: Primary detection (PD) mode enable
  #         bitOffset: 2
  #         bitWidth: 1
  #       SDEN:
  #         description: Secondary detection (SD) mode enable
  #         bitOffset: 3
  #         bitWidth: 1
  #       DCDET:
  #         description: Data contact detection (DCD) status
  #         bitOffset: 4
  #         bitWidth: 1
  #         access: read-only
  #       PDET:
  #         description: Primary detection (PD) status
  #         bitOffset: 5
  #         bitWidth: 1
  #         access: read-only
  #       SDET:
  #         description: Secondary detection (SD) status
  #         bitOffset: 6
  #         bitWidth: 1
  #         access: read-only
  #       PS2DET:
  #         description: DM pull-up detection status
  #         bitOffset: 7
  #         bitWidth: 1
  #         access: read-only
  #       DPPU:
  #         description: DP pull-up control
  #         bitOffset: 15
          # bitWidth: 1


# _delete:
#   - USB_FS

# Merge the thousands of individal bit fields into a single field for each
# CAN filter register. This is not only much easier to use but also saves
# a huge amount of filespace and compilation time etc -- as much as 30% of all
# fields in many devices are just these CAN filter bank fields.
"CAN*":
  "F?R?":
    _merge:
      - "FB*"
  "F??R?":
    _merge:
      - "FB*"

_include:
 - common_patches/4_nvic_prio_bits.yaml
 - ./common_patches/merge_USART_CR2_ADDx_fields.yaml
 - ./common_patches/merge_USART_CR2_ABRMODx_fields.yaml
 - ./common_patches/merge_USART_CR1_DEDTx_fields.yaml
 - ./common_patches/merge_USART_CR1_DEATx_fields.yaml
 - ./common_patches/rename_USART_CR2_DATAINV_field.yaml
 - ./common_patches/merge_LPUART_CR1_DEATx_fields.yaml
 - ./common_patches/merge_LPUART_CR1_DEDTx_fields.yaml
 - ./common_patches/rename_LPUART_CR2_DATAINV_field.yaml
 - ./common_patches/merge_LPUART_CR2_ADDx_fields.yaml
 - ./common_patches/merge_USART_BRR_fields.yaml
 - ./common_patches/l4_crrcr.yaml
 - common_patches/can/can.yaml
 - common_patches/can/can_filter_bank.yaml
 - ../peripherals/can/can.yaml
 - common_patches/sai/sai_v1.yaml
 - ../peripherals/gpio/gpio_v2.yaml
 - common_patches/crc/crc_rename_init.yaml
 - ../peripherals/crc/crc_advanced.yaml
 - ../peripherals/crc/crc_idr_8bit.yaml
 - ../peripherals/crc/crc_with_polysize.yaml
 - ../peripherals/wwdg/wwdg.yaml
 - ../peripherals/rcc/rcc_l4.yaml
 - ../peripherals/tim/tim_basic.yaml
 - ../peripherals/tim/tim16.yaml
 - ../peripherals/tim/tim6.yaml
 - ../peripherals/tim/tim2_32bit.yaml
 - common_patches/tim/tim2_32bit.yaml
 - ../peripherals/tim/tim_advanced.yaml
 - ../peripherals/dma/dma_v1_with_remapping.yaml
 - ../peripherals/iwdg/iwdg_with_WINR.yaml
 - ../peripherals/exti/exti.yaml
 - ../peripherals/i2c/i2c_v2.yaml
 - ../peripherals/usart/lpuart_v2A.yaml
 - ../peripherals/usart/usart_v2B1.yaml
 - common_patches/rtc/rtc_bkpr.yaml
 - common_patches/rtc/rtc_cr.yaml
 - common_patches/tsc/tsc.yaml
 - common_patches/tim/tim_ccr.yaml
 - ./common_patches/flash/flash_boot0s.yaml
 - ../peripherals/tim/tim_ccm_v2.yaml
 - ../peripherals/sai/sai.yaml
 - common_patches/dma_interrupt_names.yaml
 - ./common_patches/l4_adc_common.yaml
 - ./common_patches/l4_adc_smpr.yaml
 - ./common_patches/l4_adc_sqr1.yaml
 - ./common_patches/l4_spi.yaml
 - ../peripherals/spi/spi_l4.yaml