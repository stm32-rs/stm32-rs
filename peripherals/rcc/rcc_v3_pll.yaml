# Applicable at least to H7

# PLL registers

RCC:
  PLLCKSELR:
    DIVM?: [0, 63]
    PLLSRC:
      HSI: [0, "HSI selected as PLL clock"]
      CSI: [1, "CSI selected as PLL clock"]
      HSE: [2, "HSE selected as PLL clock"]
      None: [3, "No clock sent to DIVMx dividers and PLLs"]
  PLLCFGR:
    DIV??EN:
      Disabled: [0, "Clock ouput is disabled"]
      Enabled: [1, "Clock output is enabled"]
    PLL?RGE:
      Range1: [0, "Frequency is between 1 and 2 MHz"]
      Range2: [1, "Frequency is between 2 and 4 MHz"]
      Range4: [2, "Frequency is between 4 and 8 MHz"]
      Range8: [3, "Frequency is between 8 and 16 MHz"]
    PLL?VCOSEL:
      WideVCO: [0, "VCO frequency range 192 to 836 MHz"]
      MediumVCO: [1, "VCO frequency range 150 to 420 MHz"]
    PLL?FRACEN:
      Reset: [0, "Reset latch to tranfer FRACN to the Sigma-Delta modulator"]
      Set: [1, "Set latch to tranfer FRACN to the Sigma-Delta modulator"]
  PLL1DIVR:
    DIVP1:
      Div1: [0, "pll_p_ck = vco_ck"]
      Div2: [1, "pll_p_ck = vco_ck / 2"]
      Div4: [3, "pll_p_ck = vco_ck / 4"]
      Div6: [5, "pll_p_ck = vco_ck / 6"]
      Div8: [7, "pll_p_ck = vco_ck / 8"]
      Div10: [9, "pll_p_ck = vco_ck / 10"]
      Div12: [11, "pll_p_ck = vco_ck / 12"]
      Div14: [13, "pll_p_ck = vco_ck / 14"]
      Div16: [15, "pll_p_ck = vco_ck / 16"]
      Div18: [17, "pll_p_ck = vco_ck / 18"]
      Div20: [19, "pll_p_ck = vco_ck / 20"]
      Div22: [21, "pll_p_ck = vco_ck / 22"]
      Div24: [23, "pll_p_ck = vco_ck / 24"]
      Div26: [25, "pll_p_ck = vco_ck / 26"]
      Div28: [27, "pll_p_ck = vco_ck / 28"]
      Div30: [29, "pll_p_ck = vco_ck / 30"]
      Div32: [31, "pll_p_ck = vco_ck / 32"]
      Div34: [33, "pll_p_ck = vco_ck / 34"]
      Div36: [35, "pll_p_ck = vco_ck / 36"]
      Div38: [37, "pll_p_ck = vco_ck / 38"]
      Div40: [39, "pll_p_ck = vco_ck / 40"]
      Div42: [41, "pll_p_ck = vco_ck / 42"]
      Div44: [43, "pll_p_ck = vco_ck / 44"]
      Div46: [45, "pll_p_ck = vco_ck / 46"]
      Div48: [47, "pll_p_ck = vco_ck / 48"]
      Div50: [49, "pll_p_ck = vco_ck / 50"]
      Div52: [51, "pll_p_ck = vco_ck / 52"]
      Div54: [53, "pll_p_ck = vco_ck / 54"]
      Div56: [55, "pll_p_ck = vco_ck / 56"]
      Div58: [57, "pll_p_ck = vco_ck / 58"]
      Div60: [59, "pll_p_ck = vco_ck / 60"]
      Div62: [61, "pll_p_ck = vco_ck / 62"]
      Div64: [63, "pll_p_ck = vco_ck / 64"]
      Div66: [65, "pll_p_ck = vco_ck / 66"]
      Div68: [67, "pll_p_ck = vco_ck / 68"]
      Div70: [69, "pll_p_ck = vco_ck / 70"]
      Div72: [71, "pll_p_ck = vco_ck / 72"]
      Div74: [73, "pll_p_ck = vco_ck / 74"]
      Div76: [75, "pll_p_ck = vco_ck / 76"]
      Div78: [77, "pll_p_ck = vco_ck / 78"]
      Div80: [79, "pll_p_ck = vco_ck / 80"]
      Div82: [81, "pll_p_ck = vco_ck / 82"]
      Div84: [83, "pll_p_ck = vco_ck / 84"]
      Div86: [85, "pll_p_ck = vco_ck / 86"]
      Div88: [87, "pll_p_ck = vco_ck / 88"]
      Div90: [89, "pll_p_ck = vco_ck / 90"]
      Div92: [91, "pll_p_ck = vco_ck / 92"]
      Div94: [93, "pll_p_ck = vco_ck / 94"]
      Div96: [95, "pll_p_ck = vco_ck / 96"]
      Div98: [97, "pll_p_ck = vco_ck / 98"]
      Div100: [99, "pll_p_ck = vco_ck / 100"]
      Div102: [101, "pll_p_ck = vco_ck / 102"]
      Div104: [103, "pll_p_ck = vco_ck / 104"]
      Div106: [105, "pll_p_ck = vco_ck / 106"]
      Div108: [107, "pll_p_ck = vco_ck / 108"]
      Div110: [109, "pll_p_ck = vco_ck / 110"]
      Div112: [111, "pll_p_ck = vco_ck / 112"]
      Div114: [113, "pll_p_ck = vco_ck / 114"]
      Div116: [115, "pll_p_ck = vco_ck / 116"]
      Div118: [117, "pll_p_ck = vco_ck / 118"]
      Div120: [119, "pll_p_ck = vco_ck / 120"]
      Div122: [121, "pll_p_ck = vco_ck / 122"]
      Div124: [123, "pll_p_ck = vco_ck / 124"]
      Div126: [125, "pll_p_ck = vco_ck / 126"]
      Div128: [127, "pll_p_ck = vco_ck / 128"]
  PLL2DIVR,PLL3DIVR:
    DIVP?: [0, 127]
  PLL?DIVR:
    DIVR?,DIVQ?: [0, 127]
    DIVN?: [3, 511]
  PLL?FRACR:
    FRACN?: [0, 0x1FFF]
